{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[metadata]
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email = {{ cookiecutter.email }}
name = {{ cookiecutter.project_slug }}
keywords = {{ cookiecutter.project_slug }}
description= {{ cookiecutter.project_short_description }}
long_description = file: README.md, HISTORY.md
long_description_content_type = text/markdown
{%- if cookiecutter.open_source_license in license_classifiers %}
license = {{ cookiecutter.open_source_license }}
{%- endif %}
license_file = LICENSE
classifiers =
        Development Status :: 2 - Pre-Alpha
        Intended Audience :: Developers
{%- if cookiecutter.open_source_license in license_classifiers %}
        {{ license_classifiers[cookiecutter.open_source_license] }}
{%- endif %}
        Natural Language :: English
        Programming Language :: Python :: 3
        Programming Language :: Python :: 3.6
        Programming Language :: Python :: 3.7
        Programming Language :: Python :: 3.8
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}
include_package_data = True
zip_safe = False

[options]
python_requires = >= 3.6
package_dir=
    =src
packages=find:
test_requires =
    {%- if cookiecutter.use_pytest == 'y' %}
    pytest
    {%- endif %}

install_requires =
    {%- if cookiecutter.command_line_interface|lower == 'click' %}
    Click>=6.0
    {%- endif %}

[options.packages.find]
where=src

[options.extras_require]
docs =
    sphinx
    myst-parser
    myst-nb
    sphinx-copybutton
    sphinx-material
    numpydoc

{%- if cookiecutter.use_pytest == 'y' %}
tests =
    pytest
    pytest-cov
    pytest-runner
{%- endif %}

dev =
    %(docs)s
    {%- if cookiecutter.use_pytest == 'y' %}
    %(tests)s
    {%- endif %}
    wathchdog
    tox
    twine
    readme-renderer[md]

[options.entry_points]
setuptools.file_finders =
    setuptools_scm = setuptools_scm.integration:find_files

{% if 'no' not in cookiecutter.command_line_interface|lower -%}
console_scripts =
    {{ cookiecutter.repo_name }} = {{ cookiecutter.project_slug }}.cli:main
{%- endif %}

[flake8]
ignore = E501,W503,W505
exclude = docs

[isort]
known_first_party = {{ cookiecutter.project_slug }}
multi_line_output = 3

[aliases]
# Define setup.py command aliases here
{%- if cookiecutter.use_pytest == 'y' %}
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']
{%- endif %}

